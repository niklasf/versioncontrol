<?php
// $Id$
/**
 * @file
 * Commit Log - Display a history of commits, branches and tags,
 * optionally filtered by a set of constraint arguments.
 *
 * Copyright 2006, 2007 Derek Wright ("dww" , http://drupal.org/user/46549)
 * Copyright 2007, 2008, 2009 by Jakob Petsovits ("jpetso", http://drupal.org/user/56020)
 */

/**
 * Implementation of hook_menu().
 */
function commitlog_menu() {
  $items = array();

  $view_access = 'access commit messages';

  $items['commitlog'] = array(
    'title' => 'Commit messages',
    'page callback' => 'commitlog_operations_page',
    'access arguments' => array($view_access),
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['commitlog/repository/%'] = array(
    'title' => 'Commit messages',
    'page callback' => 'commitlog_operations_page',
    'page arguments' => array('repository', 2),
    'access arguments' => array($view_access),
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['commitlog/author/%'] = array(
    'title' => 'Commit messages',
    'page callback' => 'commitlog_operations_page',
    'page arguments' => array('author', 2),
    'access arguments' => array($view_access),
    'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function commitlog_perm() {
  return array('access commit messages');
}

/**
 * Implementation of hook_theme().
 */
function commitlog_theme() {
  return array(
    'commitlog_operations_page' => array(
      'arguments' => array('constraints' => NULL),
    ),
  );
}

/**
 * Implementation of hook_views_api().
 *
 * @return array
 */
function commitlog_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'commitlog'). '/includes',
  );
}

/**
 * Implementation of ctools hook_ctools_plugin_directory().
 */
function commitlog_ctools_plugin_directory($module, $plugin) {
  if ($module == 'versioncontrol') {
    return "includes/plugins/$plugin";
  }
}

/**
 * Page callback for the 'commitlog' family of menu paths.
 *
 * @param $type
 *   What type of commit log listing we're creating.  Supported types are 'author' and 'repository'.
 * @param $argument
 *   The argument with which to filter the view.  This is used as the first argument in the view in question.
 */
function commitlog_operations_page($type = NULL, $argument = NULL) {
  drupal_add_css(drupal_get_path('module', 'commitlog') . '/commitlog.css', 'module');

  $view = '';
  if ($type == 'author' && !is_null($argument)) {
    $set = versioncontrol_get_views_set('user_commit_view');
    $view = $set->getViewName();
  }
  else if ($type == 'repository' && !is_null($argument)) {
    $set = versioncontrol_get_views_set('repository_commit_view');
    $view = $set->getViewNameByEntity(versioncontrol_repository_load($argument));
  }
  else {
    $set = versioncontrol_get_views_set('global_commit_view');
    $view = $set->getViewName();
  }

  return views_embed_view($view, 'default', $argument);
}
